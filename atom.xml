<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xzy の 未知屋</title>
  
  
  <link href="https://xzy404.me/atom.xml" rel="self"/>
  
  <link href="https://xzy404.me/"/>
  <updated>2025-06-10T04:52:28.178Z</updated>
  <id>https://xzy404.me/</id>
  
  <author>
    <name>xzy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>怎么写出一个属于自己的排序算法——桶排序（全） &amp; 计数排序（上）</title>
    <link href="https://xzy404.me/article/%E6%80%8E%E4%B9%88%E5%86%99%E5%87%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E6%A1%B6%E6%8E%92%E5%BA%8F%EF%BC%88%E5%85%A8%EF%BC%89%20&amp;amp;%20%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>https://xzy404.me/article/%E6%80%8E%E4%B9%88%E5%86%99%E5%87%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E6%A1%B6%E6%8E%92%E5%BA%8F%EF%BC%88%E5%85%A8%EF%BC%89%20&amp;amp;%20%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F%EF%BC%88%E4%B8%8A%EF%BC%89/</id>
    <published>2025-06-10T04:52:27.342Z</published>
    <updated>2025-06-10T04:52:28.178Z</updated>
    
    <content type="html"><![CDATA[<p>同步发表于<a href="https://www.luogu.com.cn/article/o0lwl71k">洛谷专栏</a>。</p><p>怎么写出一个属于自己的排序算法呢？今天要带你写的是桶排序，顺便写一个在桶排序之上进行优化的排序算法——计数排序。</p><p>你在一个偶然的瞬间，发现一个可以不基于比较的排序算法。</p><p>我们从头开始遍历待排序数组，统计每个数字的出现次数，统计完毕后遍历计数数组，发现第 $i$ 个数字出现了 $j$ 次，那么就循环输出它 $j$ 次：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[maxn], b[maxn]; <span class="comment">// 待排序数组和桶数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++)</span><br><span class="line">    b[a[i]]++;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++) <span class="comment">// 遍历每一个数（注意不是数字）</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= b[i]; j++) <span class="comment">// 输出出现了 j 次的 i</span></span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恭喜你已经有了桶排序的代码，但是大量学者发现一个问题，只能处理 $0 \le maxn \le 10^7$ 左右的数据，不然会运行时错误（负数）以及内存超限（大数）。</p><p>于是你开始优化它，事实上你发现桶数组只需要存储待排序数组中的最小值到最大值的个数，并不需要开到 $maxn$，所以你对其进行了优化：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[maxn], minx, maxx; <span class="comment">// 待排序数组、待排序数组中的最小值和最大值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++)</span><br><span class="line">&#123;</span><br><span class="line">    minx = <span class="built_in">min</span>(minx, a[i]);</span><br><span class="line">    maxx = <span class="built_in">max</span>(maxx, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> b[maxx - minxx + <span class="number">1</span>]; <span class="comment">// 桶数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++)</span><br><span class="line">    b[a[i] - minx + <span class="number">1</span>]++;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++) <span class="comment">// 遍历每一个数（注意不是数字）</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= b[i]; j++) <span class="comment">// 输出出现了 j 次的 i</span></span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>聪明的你决定把这个称作一个新的排序算法——计数排序。</p><p>但其实如果每个数（从 $0$ 到 $10^7$）都出现过一次，这个优化还是没有效果的。</p><blockquote><p>事实上你可以尝试使用 STL 的 map 容器存储。</p></blockquote><p>所以你打算尝试将前缀和算法加进来优化，敬请期待<a href="https://www.luogu.com.cn/article/72tl0c5d">《怎么写出一个属于自己的排序算法——计数排序（下）》</a>）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;同步发表于&lt;a href=&quot;https://www.luogu.com.cn/article/o0lwl71k&quot;&gt;洛谷专栏&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;怎么写出一个属于自己的排序算法呢？今天要带你写的是桶排序，顺便写一个在桶排序之上进行优化的排序算法——计数排序。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="算法 · 理论" scheme="https://xzy404.me/categories/%E7%AE%97%E6%B3%95-%C2%B7-%E7%90%86%E8%AE%BA/"/>
    
    
    <category term="怎么写出一个属于自己的排序算法" scheme="https://xzy404.me/tags/%E6%80%8E%E4%B9%88%E5%86%99%E5%87%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>重生之我在高一</title>
    <link href="https://xzy404.me/article/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8%E9%AB%98%E4%B8%80/"/>
    <id>https://xzy404.me/article/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8%E9%AB%98%E4%B8%80/</id>
    <published>2025-04-17T04:51:20.832Z</published>
    <updated>2025-07-12T09:32:17.914Z</updated>
    
    <content type="html"><![CDATA[<h1>高一</h1><h2 id="6-月-8-日">6 月 8 日</h2><p>我在考场上，对你说了声：</p><p>你好。</p><p>我……不，是别人重生了，除了我以外，所有人都重生到了不同的年级。</p><p>因此，我们相当于分了一次班。</p><p>角色介绍：</p><ul><li>xzy：男生；原高一生；OIer；班长；开朗；平时偶尔女装；OI 水平普及+/提高，偶尔为提高+/省选-；WHK 水平 680/750；运气较好。</li><li>zxh：女生；原高三生；OIer；学生；开朗；可爱酱；OI 水平提高+/省选-，经常为省选/NOI-，偶尔为 NOI/NOI+/CTSC；WHK 水平 730/750；运气正常。</li><li>ly（林一）：男生；原高二生；WHKer；学习委员；阳光型抑郁（白天开朗晚上抑郁）；个子高很瘦，被很多人追，是校草；WHK 水平 740/750；运气较好。</li><li>lzx（李紫萱）：女生；原高二生；WHKer；学生；高冷；长得好看，经常满分；WHK 水平 750/750；运气较差；</li><li>zlz（周乐舟）：男生；原高三生；PEer；学生；开朗；长得高，长得强壮，讲义气，讲哥们；PE 水平将近二级运动员，偶尔为一级运动员；WHK 水平 550/750；运气正常。</li><li>rmx：女生；原高一生；OIer；学生；有时开朗有时高冷；漂亮；OI 水平提高+/省选− ，经常为省选/NOI−，偶尔为NOI/NOI+/CTSC；WHK 水平 725/750；运气较好。</li><li>cy：男生；原高三生；OIer；学生；开朗，爱说话，爱装弱；长相正常，身高很高；OI 水平入门，经常为 NOI/NOI+/CTSC；WHK 水平 625/750；运气正常。</li><li>yt（羽潭）：女生；原高二生；OIer；猫猫（？）；不开朗，不爱说话，爱装弱；长相正常，身高很高；OI 水平普及+/提高-，极少为 NOI/NOI+/CTSC；WHK 水平 724/750；体育水平：50 米倒数第三，800 米正数第二，2000 米第一；运气正常。</li></ul><p>这就是我们班的几个突出人物了。</p><h2 id="9-月-1-日">9 月 1 日</h2><p>开学了。</p><p>我是第一个到教室的！<s>qp！</s></p><p>“你好啊，同学。”一位老师轻快步入了教室。</p><p>“老……老师好！”我赶忙回应道。</p><p>“额，我是学生，原本是高三的，所以可能有点高。”</p><p>额，第一天就认错了人，尴尬死了呜呜。</p><p>“嗷，那你叫什么名字啊？”</p><p>“zxh，你呢？”</p><p>“我……我叫 xzy。”</p><p>“xzy 你好啊。”</p><p>就在我和 zxh 略显尴尬又带着一丝新奇的交谈中，教室的门又被轻轻推开。一个高高瘦瘦的身影出现在门口，阳光洒在他身上，勾勒出挺拔的轮廓。</p><p>“哟，你们好啊，来这么早啊！” ly 一边说着，一边大步走进教室，眼睛快速扫了一圈，最后落在我和 zxh 身上，“看来我不是第一个，这位是……”</p><p>我赶忙介绍：“这是 zxh，原本高三的。”</p><p>林一伸出手，礼貌地说道：“你好啊，zxh，很高兴认识你，以后请多指教啦。”zxh 也大方地伸出手回应：“你好你好，以后大家就是同学了，互相学习。”</p><p>随着时间推移，同学们陆陆续续走进教室。李紫萱穿着一身简约的短裙，长发披肩，神色清冷，她走进教室后，只是轻轻点了点头，便径直走向一个靠窗的位置坐下，拿出一本笔记本开始静静翻阅。</p><p>周乐舟人还没到，爽朗的笑声先传了进来：“哈哈，新班级，新气象啊！” 他那高大强壮的身躯一出现，仿佛让教室都显得拥挤了几分。他看到我们，热情地打招呼：“嘿，都来这么早，等会儿可得好好聊聊。”</p><p>rmx 今天打扮得格外漂亮，她蹦蹦跳跳地走进来，看到 zxh，眼睛一亮：“哇，zxh 学姐，没想到在这儿能碰见你。”zxh 笑着回应：“是啊，真巧呢，以后一起加油哦。”</p><p>cy 大大咧咧地走进来，一边走一边念叨：“哎，是不是我没睡醒啊！怎么重生了呢。”</p><p>最后走进来的是羽潭，她像一只小心翼翼的小猫，脚步轻轻的。看到大家都在热烈交谈，她只是默默地找了个角落坐下，安静地看着窗外。</p><p>等同学们基本都到齐了，班主任走进了教室。班主任是一位年轻女性，眼神中透着温和与睿智。她走上讲台，清了清嗓子说道：“同学们，虽然大家来自不同的年级，但从今天起，我们就是一个新的集体了。希望大家在这个新环境里，相互帮助，共同进步……”</p><p>我坐在座位上，看着周围这些陌生的面孔，心中涌起一股别样的情绪。这场奇妙的重生，让我们的人生轨迹发生了改变，而未来又会发生什么呢？我充满了期待，也带着一丝忐忑。此时，zxh 转过头来，对我眨了眨眼睛，仿佛在说，一起迎接这未知的高中生活吧。</p><h1>9 月 2 日</h1><p>我走进教室，<s>一如既往</s>跟昨天一样，第一个进入教室的，还是 zxh。</p><p>“你怎么每天来得这么早？”</p><p>“你猜。”</p><p>“你妈让你早起？”</p><p>“不是。”</p><p>“那是啥？”</p><p>“给你讲个故事你就知道了</p><p>“男孩喜欢上了集训队的一个女孩。</p><p>“男孩是交了钱进队的，可是那个女孩很优秀。</p><p>“男孩费尽一切努力来引起女孩的注意。</p><p>“训练一星期后，他顶着染黄做了造型的头发大摇大摆进了机房，看着秃头教练长大了嘴巴看他。</p><p>“同学都哄堂大笑，看着秃头教练的反应，可是男孩却只是望着女孩。</p><p>“女孩头也没抬，静静的坐在座位上敲代码。</p><p>“后来，男孩在课上总是怪声怪气的接教练的话，在座位上放大音量讲昨天他又暴力过了一道题，因为在练习赛偷看别人的代码被教练大骂。</p><p>“他每次都会一脸无所谓，只是会偷偷地，很快地瞄一眼女孩。可是女孩的脸上总是惊不起一丝波澜。</p><p>“终于他再也忍不住内心的情感，在一个休息的晚上，召集一群兄弟在机房下，当女孩安静的走出楼梯口时，他用近乎嘶哑的声音向她表白。</p><p>“人群一阵沸腾，高呼在一起。</p><p>“她愣了，白皙修长的手抓紧了书包背带。</p><p>“过一会，她只是安静的走到男孩面前，仰头说，我的梦想是worldfinal，我想在那里等你。</p><p>“人群一阵哄笑，男孩红了脸。</p><p>“以他的成绩，省赛也上不了。</p><p>“他一把把花塞到了旁边的人怀里，扭头头也不回挤出人群。</p><p>“第二天，传来了男孩转专业的消息，在另一个校区。</p><p>“后来的女孩，总是在机房上看着那个空座位，发愣。</p><p>“三年后，worldfinal现场，她安静地站着，比起三年前消瘦了许多，带着板子，只是站着，像是在等谁。</p><p>“可是她也不知道她究竟在等着什么，叹了一口气，走进赛场。</p><p>“突然，身后一个明朗的声音响起，你不是要等我吗？怎么不等了？</p><p>“女孩的眼泪流了下来，转身。</p><p>“男孩把头发染回了黑色，一身简单的白体恤牛仔裤，像是周遭泛着阳光。</p><p>“他帅气地拉起了她的手，走进赛场。</p><p>“后来，成为男孩女朋友多年的她偶然问道，你那年去哪里学算法了，能学得这么好？</p><p>“男生说：我报名了–（没给广告费）网校的基础提高衔接计划，不仅有老学员大额（¥2999）优惠，还有–（没给广告费）名师名管理员上课，1v1 专属答疑，1w+ 道精选题目，老师上课清晰易懂！但是早上 5:00 就开课，所以他不得不早起上课。”</p><p>“所以呢？”</p><p>“我就相当于那个男生。”</p><p>“真的假的，你报课了吗？”</p><p>“报了，但效果不显著，只是把我睡懒觉的习惯改好了。”</p><p>“额……”</p><h1>9 月 3 日</h1><p>晚上，我回到宿舍。</p><p>“嘟嘟嘟，”门发出了声音，“夜宵吃不吃？”宿管说。</p><p>夜宵？好吃的。</p><hr><p>未完待续。</p>]]></content>
    
    
    <summary type="html">本文讲述了 xzy 重生至高一的故事。</summary>
    
    
    
    <category term="娱乐" scheme="https://xzy404.me/categories/%E5%A8%B1%E4%B9%90/"/>
    
    
    <category term="娱乐" scheme="https://xzy404.me/tags/%E5%A8%B1%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>公告与随笔</title>
    <link href="https://xzy404.me/article/%E5%85%AC%E5%91%8A%E4%B8%8E%E9%9A%8F%E7%AC%94/"/>
    <id>https://xzy404.me/article/%E5%85%AC%E5%91%8A%E4%B8%8E%E9%9A%8F%E7%AC%94/</id>
    <published>2025-04-16T11:22:47.809Z</published>
    <updated>2025-04-16T11:22:48.218Z</updated>
    
    <content type="html"><![CDATA[<h1>公告</h1><ul><li>2025-xx-xx：启用博客！</li></ul><h1>随笔</h1><ul><li>无。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;公告&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2025-xx-xx：启用博客！&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;随笔&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;无。&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    <category term="闲话" scheme="https://xzy404.me/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
    <category term="About" scheme="https://xzy404.me/tags/About/"/>
    
  </entry>
  
  <entry>
    <title>game</title>
    <link href="https://xzy404.me/article/game/"/>
    <id>https://xzy404.me/article/game/</id>
    <published>2025-04-15T13:10:21.331Z</published>
    <updated>2025-04-16T12:24:54.959Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(false);</span></span><br><span class="line">    <span class="comment">// cin.tie(nullptr);</span></span><br><span class="line">    <span class="comment">// cout.tie(nullptr);</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello World!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="环境" scheme="https://xzy404.me/categories/%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="环境" scheme="https://xzy404.me/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>【转载于 qwqerty】一种基于积性性质快速计算 lowbit 的方法</title>
    <link href="https://xzy404.me/article/%E3%80%90%E8%BD%AC%E8%BD%BD%E4%BA%8E%20qwqerty%E3%80%91%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E%E7%A7%AF%E6%80%A7%E6%80%A7%E8%B4%A8%E5%BF%AB%E9%80%9F%E8%AE%A1%E7%AE%97%20lowbit%20%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://xzy404.me/article/%E3%80%90%E8%BD%AC%E8%BD%BD%E4%BA%8E%20qwqerty%E3%80%91%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E%E7%A7%AF%E6%80%A7%E6%80%A7%E8%B4%A8%E5%BF%AB%E9%80%9F%E8%AE%A1%E7%AE%97%20lowbit%20%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2025-04-15T12:45:34.500Z</published>
    <updated>2025-04-15T12:45:35.731Z</updated>
    
    <content type="html"><![CDATA[<h1>本文转载于<a href="https://www.luogu.com.cn/article/mgu1aigs">https://www.luogu.com.cn/article/mgu1aigs</a>。</h1><p>可惜休闲娱乐分区不能全站推荐（<br>我们不难打出一下暴力代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!(x &amp; <span class="number">1</span>)) &#123;</span><br><span class="line">res++;</span><br><span class="line">x &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (<span class="number">1</span> &lt;&lt; res);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>容易证明，$\operatorname{lowbit}(x)$ 是积性函数。看到积性函数，我们首先联想到分解质因数，所以我们可以将 $x$ 分解质因数，计算其质因数之积。<br>接下来我们考虑质数幂的情况，很显然，除了 $\operatorname{lowbit}(2^k)=2^k$ 之外，其它都是 $0$。所以我们只需要分解质因数，套公式计算即可。代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (y) &#123;</span><br><span class="line"><span class="keyword">if</span> (y &amp; <span class="number">1</span>) res *= x;</span><br><span class="line">x *= x;</span><br><span class="line">y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / i; i++) &#123;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">x /= i;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">2</span>) res *= <span class="built_in">qpow</span>(<span class="number">2</span>, cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x != <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">2</span>) &#123;</span><br><span class="line">res *= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>考虑优化，只需统计 $=2$ 的质因数即可，代码可以优化成这样：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (y) &#123;</span><br><span class="line"><span class="keyword">if</span> (y &amp; <span class="number">1</span>) res *= x;</span><br><span class="line">x *= x;</span><br><span class="line">y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (x % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">x /= <span class="number">2</span>;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">qpow</span>(<span class="number">2</span>, cnt);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>最后再使用位运算优化一下常数，代码就会变成这样：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!(x &amp; <span class="number">1</span>)) &#123;</span><br><span class="line">res++;</span><br><span class="line">x &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (<span class="number">1</span> &lt;&lt; res);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这样，我们就将一个 $O(\log n)$ 的代码优化成了 $O(\log n)$，优化效果非常明显。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;本文转载于&lt;a href=&quot;https://www.luogu.com.cn/article/mgu1aigs&quot;&gt;https://www.luogu.com.cn/article/mgu1aigs&lt;/a&gt;。&lt;/h1&gt;
&lt;p&gt;可惜休闲娱乐分区不能全站推荐（&lt;br&gt;
我们不难</summary>
      
    
    
    
    <category term="闲话" scheme="https://xzy404.me/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
    <category term="转载" scheme="https://xzy404.me/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>题解：P12172 [蓝桥杯 2025 省 Python B] LQ 图形</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12172%20[%E8%93%9D%E6%A1%A5%E6%9D%AF%202025%20%E7%9C%81%20Python%20B]%20LQ%20%E5%9B%BE%E5%BD%A2/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12172%20[%E8%93%9D%E6%A1%A5%E6%9D%AF%202025%20%E7%9C%81%20Python%20B]%20LQ%20%E5%9B%BE%E5%BD%A2/</id>
    <published>2025-04-15T12:26:12.612Z</published>
    <updated>2025-04-15T12:26:13.644Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：P12172 [蓝桥杯 2025 省 Python B] LQ 图形</h1><h2 id="思路">思路</h2><p>本题考察模拟。</p><p>不规则图形不方便输出？没关系，分成两部分（两个矩形）即可，大小分别为 $h \times w$ 和 $w \times (v + w)$。</p><h2 id="代码">代码</h2><p>第一个矩形的输出代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= h; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= w; j++)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Q&quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二个矩形是差不多的，只需要调整 $i$ 和 $j$ 的范围即可。</p><p>完整代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> w, h, v;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(false);</span></span><br><span class="line">    <span class="comment">// cin.tie(nullptr);</span></span><br><span class="line">    <span class="comment">// cout.tie(nullptr);</span></span><br><span class="line">    cin &gt;&gt; w &gt;&gt; h &gt;&gt; v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= h; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= w; j++)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Q&quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= w; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= v + w; j++)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Q&quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：P12172 [蓝桥杯 2025 省 Python B] LQ 图形&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;本题考察模拟。&lt;/p&gt;
&lt;p&gt;不规则图形不方便输出？没关系，分成两部分（两个矩形）即可，大小分别为 $h &#92;times w$ 和 $w &#92;t</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>对于某些事的另一种解释</title>
    <link href="https://xzy404.me/article/%E5%AF%B9%E4%BA%8E%E6%9F%90%E4%BA%9B%E4%BA%8B%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E8%A7%A3%E9%87%8A/"/>
    <id>https://xzy404.me/article/%E5%AF%B9%E4%BA%8E%E6%9F%90%E4%BA%9B%E4%BA%8B%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E8%A7%A3%E9%87%8A/</id>
    <published>2025-04-15T12:25:34.834Z</published>
    <updated>2025-04-15T12:25:35.492Z</updated>
    
    <content type="html"><![CDATA[<p>叠甲：本文仅作娱乐，不做任何依据。</p><ul><li>边运动边写作业会无事发生：<ul><li>从作用分析：<ul><li>运动使人快乐、写作业使人伤心，互相抵消</li></ul></li><li>从后果分析：<ul><li>猝死使人伤心、不用写作业使人快乐，互相抵消</li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;叠甲：本文仅作娱乐，不做任何依据。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;边运动边写作业会无事发生：
&lt;ul&gt;
&lt;li&gt;从作用分析：
&lt;ul&gt;
&lt;li&gt;运动使人快乐、写作业使人伤心，互相抵消&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从后果分析：
&lt;ul&gt;
&lt;li&gt;猝死使人伤心、不用写</summary>
      
    
    
    
    <category term="闲话" scheme="https://xzy404.me/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>题解：P12154 [蓝桥杯 2024 省 Java B] 逃离高塔</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12154%20[%E8%93%9D%E6%A1%A5%E6%9D%AF%202024%20%E7%9C%81%20Java%20B]%20%E9%80%83%E7%A6%BB%E9%AB%98%E5%A1%94/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12154%20[%E8%93%9D%E6%A1%A5%E6%9D%AF%202024%20%E7%9C%81%20Java%20B]%20%E9%80%83%E7%A6%BB%E9%AB%98%E5%A1%94/</id>
    <published>2025-04-15T12:24:51.764Z</published>
    <updated>2025-04-15T12:24:53.058Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：P12154 [蓝桥杯 2024 省 Java B] 逃离高塔</h1><h2 id="思路">思路</h2><p>一个数的立方数个位仅由<strong>该数的个位数</strong>决定。因此，我们只需确定哪些个位数的立方结果以 $3$ 结尾并统计以这些个位数结尾的数的出现次数。</p><p>因为在 $0$ 至 $9$ 这个范围内，只有 $7$ 的立方数个位是 $3$（$7^3=343$）。</p><p>然后从 $1$ 到 $2025$ 中每 $10$ 个就会有一个数的个位为 $7$，最小为 $7$，最大为 $2017$。</p><p>所以，我们用这些数构成等差数列，首项为 $7$，末项为 $2017$，公差为 $10$。总项数公式为：</p><p>$$<br>\text{项数} = \frac{\text{末项} - \text{首项}}{\text{公差}} + 1 = \frac{2017 - 7}{10} + 1 = 202<br>$$</p><p>因此答案为 $202$。</p><h2 id="代码">代码</h2><p>C++ 代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(false);</span></span><br><span class="line">    <span class="comment">// cin.tie(nullptr);</span></span><br><span class="line">    <span class="comment">// cout.tie(nullptr);</span></span><br><span class="line">    cout &lt;&lt; <span class="number">202</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java 代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">202</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：P12154 [蓝桥杯 2024 省 Java B] 逃离高塔&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;一个数的立方数个位仅由&lt;strong&gt;该数的个位数&lt;/strong&gt;决定。因此，我们只需确定哪些个位数的立方结果以 $3$ 结尾并统计以这些个位数</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解：CF411C Kicker</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9ACF411C%20Kicker/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9ACF411C%20Kicker/</id>
    <published>2025-04-15T12:24:08.588Z</published>
    <updated>2025-04-15T12:24:09.829Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：CF411C Kicker</h1><h2 id="思路">思路</h2><p>队伍一先安排，那么队伍二想要获胜一定安排能踢过队伍一的球员。</p><p>先看队伍一，怎么保证队伍一必胜呢？只要队伍一的攻击球员<s>至高无上</s>特别厉害，攻击力要比队伍二任意球员的防守力都要大，那么无论队伍二怎么安排防守都踢不过。同样的，只要队伍一的防守球员<s>至高无上</s>特别厉害，防守力要比队伍二任意球员的攻击力都要大，那么无论队伍二怎么安排攻击都踢不过。队伍二亦然。</p><p>结论：只要一个人的攻击力大于对方二人的防守力且另一个人的防守力大于对方二人的攻击力则该队伍获胜，反之亦然。如果两队都没有杰出的球员能同时踢败对方的两位球员，那么就没有保证胜利的安排方案。</p><p>当然，队伍二不能套用队伍一的代码，因为队伍二是根据队伍一进行选择的，而以队伍二为基准进行判断时我们并不知道队伍一的安排，所以要把队伍一每一种安排都列举出来。</p><h2 id="代码">代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">2</span>], b[<span class="number">2</span>], c[<span class="number">2</span>], d[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; afs &gt;&gt; agj &gt;&gt; bfs &gt;&gt; bgj &gt;&gt; cfs &gt;&gt; cgj &gt;&gt; dfs &gt;&gt; dgj;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        (afs &gt; <span class="built_in">max</span>(cgj, dgj) &amp;&amp; bgj &gt; <span class="built_in">max</span>(cfs, dgj)) ||</span><br><span class="line">        (bfs &gt; <span class="built_in">max</span>(cgj, dgj) &amp;&amp; agj &gt; <span class="built_in">max</span>(cfs, dgj)))</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Team 1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">        (cgj &gt; afs &amp;&amp; dfs &gt; bgj || dgj &gt; afs &amp;&amp; cfs &gt; bgj) &amp;&amp;</span><br><span class="line">        (cgj &gt; bfs &amp;&amp; dfs &gt; agj || dgj &gt; bfs &amp;&amp; cfs &gt; agj))</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Team 2&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Draw&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：CF411C Kicker&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;队伍一先安排，那么队伍二想要获胜一定安排能踢过队伍一的球员。&lt;/p&gt;
&lt;p&gt;先看队伍一，怎么保证队伍一必胜呢？只要队伍一的攻击球员&lt;s&gt;至高无上&lt;/s&gt;特别厉害，攻击力要比队伍二任意</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>退谷记</title>
    <link href="https://xzy404.me/article/%E9%80%80%E8%B0%B7%E8%AE%B0/"/>
    <id>https://xzy404.me/article/%E9%80%80%E8%B0%B7%E8%AE%B0/</id>
    <published>2025-04-15T12:23:26.054Z</published>
    <updated>2025-04-15T12:23:27.064Z</updated>
    
    <content type="html"><![CDATA[<p>看到大家都在写退役记，可我不想退役，所以就有了退谷记。</p><h1>上线记录</h1><ul><li>2025/4/9：发布退谷犇犇 | 发布退谷记。</li><li>2025/4/10：拜谢佛祖。</li><li>2025/4/11：打入门赛。</li><li>2025/4/12：搞博客。</li></ul><h1>随笔</h1><p>2025/4/9-1</p><ul><li>水题不开 IDE，</li><li>红题不开编译器。</li><li>橙题靠运气，</li><li>黄靠测评机。</li><li>绿题全靠打破表，</li><li>蓝题全靠飞样例。</li><li>紫下测试点，</li><li>黑靠抄题解。</li></ul><p>2025/4/9-2</p><ul><li>也就只有那破红点陪着我了。</li></ul><p>2025/4/9-3</p><ul><li>再不理我就再也理不了我了。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;看到大家都在写退役记，可我不想退役，所以就有了退谷记。&lt;/p&gt;
&lt;h1&gt;上线记录&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2025/4/9：发布退谷犇犇 | 发布退谷记。&lt;/li&gt;
&lt;li&gt;2025/4/10：拜谢佛祖。&lt;/li&gt;
&lt;li&gt;2025/4/11：打入门赛。&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="记录" scheme="https://xzy404.me/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>题解：P11950 [科大国创杯初中组 2023] 评分</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP11950%20[%E7%A7%91%E5%A4%A7%E5%9B%BD%E5%88%9B%E6%9D%AF%E5%88%9D%E4%B8%AD%E7%BB%84%202023]%20%E8%AF%84%E5%88%86/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP11950%20[%E7%A7%91%E5%A4%A7%E5%9B%BD%E5%88%9B%E6%9D%AF%E5%88%9D%E4%B8%AD%E7%BB%84%202023]%20%E8%AF%84%E5%88%86/</id>
    <published>2025-04-15T12:13:41.359Z</published>
    <updated>2025-04-15T12:13:41.890Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：P11950 [科大国创杯初中组 2023] 评分</h1><h2 id="思路">思路</h2><p>模拟题。</p><p>每次读入时先累计分数并统计最大和最小分值，读入完后减去后最大和最小分值后再取平均数。</p><p>最后排完序并输出即可。</p><h2 id="代码">代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, m, ma = <span class="number">-1</span>, mi = <span class="number">105</span>, sum, t;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">STRUCT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> s;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">&#125; a[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(STRUCT x, STRUCT y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.s != y.s)</span><br><span class="line">        <span class="keyword">return</span> x.s &gt; y.s;</span><br><span class="line">    <span class="keyword">return</span> x.id &lt; y.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ma = <span class="number">-1</span>, mi = <span class="number">105</span>, sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; t;</span><br><span class="line">            sum += t;</span><br><span class="line">            ma = <span class="built_in">max</span>(ma, t);</span><br><span class="line">            mi = <span class="built_in">min</span>(mi, t);</span><br><span class="line">        &#125;</span><br><span class="line">        sum = sum - ma - mi;</span><br><span class="line">        a[i].s = <span class="number">1.0</span> * sum / (m - <span class="number">2</span>);</span><br><span class="line">        a[i].id = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>, cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; a[i].id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：P11950 [科大国创杯初中组 2023] 评分&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;模拟题。&lt;/p&gt;
&lt;p&gt;每次读入时先累计分数并统计最大和最小分值，读入完后减去后最大和最小分值后再取平均数。&lt;/p&gt;
&lt;p&gt;最后排完序并输出即可。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>狂包日记</title>
    <link href="https://xzy404.me/article/%E7%8B%82%E5%8C%85%E6%97%A5%E8%AE%B0/"/>
    <id>https://xzy404.me/article/%E7%8B%82%E5%8C%85%E6%97%A5%E8%AE%B0/</id>
    <published>2025-04-15T12:12:50.108Z</published>
    <updated>2025-04-15T12:22:24.613Z</updated>
    
    <content type="html"><![CDATA[<p>有个面包，走在路上，走着走着，肚子饿了，于是吃了，他的自己。</p><p>好吧，应该是：</p><p>有个面包，走着走着肚子饿了，于是他把他自己吃掉了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;有个面包，走在路上，走着走着，肚子饿了，于是吃了，他的自己。&lt;/p&gt;
&lt;p&gt;好吧，应该是：&lt;/p&gt;
&lt;p&gt;有个面包，走着走着肚子饿了，于是他把他自己吃掉了。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="闲话" scheme="https://xzy404.me/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>题解：P1036 [NOIP 2002 普及组] 选数</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP1036%20[NOIP%202002%20%E6%99%AE%E5%8F%8A%E7%BB%84]%20%E9%80%89%E6%95%B0/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP1036%20[NOIP%202002%20%E6%99%AE%E5%8F%8A%E7%BB%84]%20%E9%80%89%E6%95%B0/</id>
    <published>2025-04-15T12:11:06.542Z</published>
    <updated>2025-04-15T12:11:07.341Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：P1036 [NOIP 2002 普及组] 选数</h1><h2 id="思路">思路</h2><p>由于数据小，考虑暴力搜索每种可能并判断总和是否为素数。</p><p>详细一点（定义 $m$ 为选的数个数，$s$ 为当前的和，$x$ 为下一个选的数的位置，$dfs(m, s, x)$ 为搜索函数，$ans$ 为种类数即题目所求）：</p><ol><li>确定当前选择的数；</li><li>从 $x$ 遍历 $i$ 至整个数组 $a$，每次搜索 $dfs(m + 1, s + a_i, i + 1)$；</li><li>当 $m = k$ 了，判断 $s$ 是否为素数：<ul><li>是：$ans + 1$；</li><li>不是：结束搜索，因为后面没有继续搜索的必要。</li></ul></li></ol><h2 id="代码">代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n, k, ans, a[<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x)</span> <span class="comment">// 判断 x 是否为质数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">2</span>; i * i &lt;= x; i++) <span class="comment">// 避免使用 sqrt() 函数，减少精度误差</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>) <span class="comment">// 等同于 x % i == 0</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">long</span> <span class="type">long</span> m, <span class="type">long</span> <span class="type">long</span> s, <span class="type">long</span> <span class="type">long</span> x)</span> <span class="comment">// m：选的数个数，s：当前的和，x：下一个选的数的位置</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m == k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(s)) <span class="comment">// 如果当前的和是质数，则 ans++</span></span><br><span class="line">            ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = x; i &lt; n; i++) <span class="comment">// 从 x 开始</span></span><br><span class="line">        <span class="built_in">dfs</span>(m + <span class="number">1</span>, s + a[i], i + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">// 初始状态：选的数个数为 0，当前的和为 0，下一个选的数的位置为 0</span></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：P1036 [NOIP 2002 普及组] 选数&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;由于数据小，考虑暴力搜索每种可能并判断总和是否为素数。&lt;/p&gt;
&lt;p&gt;详细一点（定义 $m$ 为选的数个数，$s$ 为当前的和，$x$ 为下一个选的数的位置，$</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Markdown/TeX</title>
    <link href="https://xzy404.me/article/TeX/"/>
    <id>https://xzy404.me/article/TeX/</id>
    <published>2025-04-13T13:02:15.095Z</published>
    <updated>2025-04-16T12:19:30.134Z</updated>
    
    <content type="html"><![CDATA[<h1>1 级标题：Built by 黑少, used by xzy, copyright belongs to xzy and 黑少. 本站由黑少建造，由 xzy 使用，版权归 xzy 和黑少所有。本站会不定时咕咕咕地更新！</h1><h2 id="2-级标题">2 级标题</h2><h3 id="3-级标题">3 级标题</h3><h4 id="4-级标题">4 级标题</h4><h5 id="5-级标题">5 级标题</h5><h6 id="6-级标题">6 级标题</h6><p>这是一篇文章……吗？</p><p>看来我需要<strong>加粗</strong>一下这个<em>斜体</em>的<s>删除线</s>。</p><p>当然不能落了<a href="https://xzy404.me">博客主页</a>。</p><ul><li>114514</li><li>1919810</li></ul><ol><li>首先</li><li>然后</li></ol><blockquote><p>freopen 怎么打？</p></blockquote><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line">#define endl &#x27;\n&#x27;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    // ios::sync_with_stdio(false);</span><br><span class="line">    // cin.tie(nullptr);</span><br><span class="line">    // cout.tie(nullptr);</span><br><span class="line">    cout &lt;&lt; &quot;Hello World!&quot; &lt;&lt; endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>114514</code> 是个数。</p><table><thead><tr><th>col1</th><th>col2</th><th>col3</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>3</td></tr><tr><td>4</td><td>5</td><td>6</td></tr></tbody></table><p>$$<br>114514 + 1919810 = \texttt{114514} \text{ 就怪了！}<br>$$</p><p>$114514+1919810=\text{?}$</p><p>博客好评！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;1 级标题：Built by 黑少, used by xzy, copyright belongs to xzy and 黑少. 本站由黑少建造，由 xzy 使用，版权归 xzy 和黑少所有。本站会不定时咕咕咕地更新！&lt;/h1&gt;
&lt;h2 id=&quot;2-级标题&quot;&gt;2 级标题&lt;</summary>
      
    
    
    
    <category term="其他" scheme="https://xzy404.me/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="About" scheme="https://xzy404.me/tags/About/"/>
    
  </entry>
  
</feed>
