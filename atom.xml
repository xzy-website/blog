<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xzy の 未知屋</title>
  
  
  <link href="https://xzy404.me/atom.xml" rel="self"/>
  
  <link href="https://xzy404.me/"/>
  <updated>2025-09-14T12:08:17.000Z</updated>
  <id>https://xzy404.me/</id>
  
  <author>
    <name>xzy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>题解：P12004 【MX-X10-T0】[LSOT-4] 嗯欧哎劈</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12004%20%E3%80%90MX-X10-T0%E3%80%91[LSOT-4]%20%E5%97%AF%E6%AC%A7%E5%93%8E%E5%8A%88/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12004%20%E3%80%90MX-X10-T0%E3%80%91[LSOT-4]%20%E5%97%AF%E6%AC%A7%E5%93%8E%E5%8A%88/</id>
    <published>2025-09-14T12:08:12.353Z</published>
    <updated>2025-09-14T12:08:17.000Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：P12004 【MX-X10-T0】[LSOT-4] 嗯欧哎劈</h1><h2 id="思路">思路</h2><p>考虑直接模拟。</p><p>可以在读入之后按照题意先计算三个奖项的分数线，再进行判断。</p><p>我们定义 <code>fir, sec, thi</code> 分别表示一至三等奖的分数线，那么可以这样进行计算（数组 <code>a</code> 表示所有省的一等奖分数线，因为题目已经写了从大到小进行排序，我们不需要再进行排序了）：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fir = a[<span class="number">1</span>];</span><br><span class="line">sec = a[<span class="number">3</span>] - <span class="number">1</span>;</span><br><span class="line">thi = <span class="number">40</span>;</span><br></pre></td></tr></table></figure><p>那么如果判断是这样写：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(x &gt;= fir)</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;sidekick&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (x &gt;= sec)</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;sgnd&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (x &gt;= thi)</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;cxq&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (x &lt; thi)</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;kiku&quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>就会导致一等奖分数线及以上的成绩会同时输出三个奖项的结果（不会输出没得奖的结果是因为不得奖和三等奖的判断条件相反，要么三等奖要么不得奖）。</p><p>那么我们可以用到这个：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(判断条件) <span class="comment">// 如果</span></span><br><span class="line">    结果</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(判断条件) <span class="comment">// 如果</span></span><br><span class="line">    结果</span><br><span class="line"><span class="keyword">else</span> <span class="comment">// 否则</span></span><br><span class="line">    结果</span><br></pre></td></tr></table></figure><p>这个代码与下面代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(判断条件) <span class="comment">// 如果</span></span><br><span class="line">    结果</span><br><span class="line"><span class="keyword">if</span>(判断条件) <span class="comment">// 如果</span></span><br><span class="line">    结果</span><br></pre></td></tr></table></figure><p>区别在于，第一个代码会按顺序判断，一旦满足 <code>if</code> 中的条件，则会停止后面的判断。</p><p>而第二个代码一旦满足其中的条件，并不会停止判断，而是继续判断下面的语句。</p><p>这样如果满足一等奖的判断语句，就不会继续判断二等奖了。</p><p>插一句，如果你这样写：<code>if(x &gt;= fir) return cout &lt;&lt; &quot;sidekick&quot; &lt;&lt; endl, 0;</code>，即输出之后结束程序也是可以的，这样也可以不用 <code>else if</code>。</p><p>同理，如果二等奖与三等奖成绩相同，因为先判断二等奖，满足二等奖条件输出之后直接结束判断，所以不会影响三等奖。</p><h2 id="代码">代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> x, a[<span class="number">35</span>], fir, sec, thi;</span><br><span class="line"><span class="comment">// 这个人的成绩，所有省份的一等奖分数线</span></span><br><span class="line"><span class="comment">// 场切省一等奖，二等奖，三等奖分数线 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">32</span>;i++)</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">fir = a[<span class="number">1</span>];</span><br><span class="line">sec = a[<span class="number">3</span>] - <span class="number">1</span>;</span><br><span class="line">thi = <span class="number">40</span>;</span><br><span class="line"><span class="keyword">if</span>(x &gt;= fir)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sidekick&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x &gt;= sec)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sgnd&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x &gt;= thi)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;cxq&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;kiku&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：P12004 【MX-X10-T0】[LSOT-4] 嗯欧哎劈&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;考虑直接模拟。&lt;/p&gt;
&lt;p&gt;可以在读入之后按照题意先计算三个奖项的分数线，再进行判断。&lt;/p&gt;
&lt;p&gt;我们定义 &lt;code&gt;fir, sec, </summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>最初的玩笑</title>
    <link href="https://xzy404.me/article/%E6%9C%80%E5%88%9D%E7%9A%84%E7%8E%A9%E7%AC%91/"/>
    <id>https://xzy404.me/article/%E6%9C%80%E5%88%9D%E7%9A%84%E7%8E%A9%E7%AC%91/</id>
    <published>2025-07-13T00:46:43.537Z</published>
    <updated>2025-07-13T00:46:44.509Z</updated>
    
    <content type="html"><![CDATA[<p>毕业季的阳光斜切过教室，像一把灼烫的刀。</p><p>我偷偷在课桌下画藏宝图。</p><p>图上的终点，是操场尽头那棵老槐树。</p><p>那里埋着我的宝盒。</p><p>盒子里，是我那本翻旧了的《小王子》。</p><p>书页的空白处，藏着用铅笔写的小字：你是我唯一的玫瑰。</p><p>这行字，是我熬了三个晚上才想出来的。</p><p>我知道她喜欢看书，常去那棵树下。</p><p>于是，我策划了一场盛大的游戏。</p><p>那天下午，我故意把藏宝图折成纸飞机。</p><p>纸飞机穿过半个教室，轻轻降落在她的铅笔盒旁。</p><p>她展开看，全班同学都好奇地围上去。</p><p>“哎哟，寻宝游戏！”有人起哄。</p><p>她抬头，眼睛弯弯的，带着笑意望向我。</p><p>“谁画的？好幼稚呀。”</p><p>哄笑声里，我脸烧得厉害。</p><p>只好也挠头笑：“我画的，瞎玩呗！”</p><p>那笑声像无数小针，扎得我手足无措。</p><p>她真的去了。</p><p>一群同学跟着她，浩浩荡荡，像去远征。</p><p>我远远落在后面，心快跳出喉咙。</p><p>她果然找到了盒子，在树下扬起来。</p><p>大家欢呼着打开——书页翻动，阳光刺眼。</p><p>我屏住呼吸。</p><p>可她只翻了翻，就笑着递给大家看：“哈，空的！果然是个玩笑！”</p><p>人群爆发出更大的笑声，风卷着泡桐树的影子扑过来。</p><p>我愣在原地。</p><p>那行字，分明写在扉页的空白处，铅笔印子很浅，却是我全部心跳的分量。</p><p>怎么会看不见？怎么会？</p><p>她只当是个玩笑，一场空欢喜。</p><p>毕业那天，大家忙着签名留念。</p><p>她笑着把书递还给我：“喏，完璧归赵！下次藏宝，记得放真宝贝呀！”</p><p>风穿过喧闹的人群，纸在风里抖得像只白鸽。</p><p>我接过书，扉页干干净净。</p><p>那行字，不知何时被谁无意擦去了。</p><p>铅笔的痕迹如此之轻，像少年易逝的勇气，像命运随手一抹的指纹。</p><p>阳光穿过树叶，碎成无数晃动的光斑。</p><p>我捏紧那本书。</p><p>原来最初那个笨拙的玩笑，只开给了我自己。</p><p>原来有些郑重其事的埋藏，未及破土，便永远失落在岁月空旷的回声里——这玩笑的代价，是心被无形之手掏空一回。</p><p>许多年后才明白，人生确乎有太多真心，被一笑而过轻巧地没收了去。那行字迹究竟如何消失的，竟成了记忆里一道永恒的谜面：是风揉碎过期待的凭证，还是时光本就擅长抹平一切微小的刻痕？</p><p>可当时那个少年，只是捧着突然变轻的书页站在人群中央，第一次尝到了某种巨大而无声的失落。</p><p>最初那个认真的玩笑，命运竟只允许我一人当真。</p><hr><ol><li>本篇文章中，“我”随着情节发展而产生了五次变化，请根据示例进行概括。（3 分）<br>（1）害羞（2）____（3）____（4）愣住（5）____</li><li>结合语境，品味下列句子。（4 分）<br>（1）铅笔的痕迹如此之轻，像少年易逝的勇气，像命运随手一抹的指纹。</li><li>从全文看，以“最初的玩笑”为题，有什么好处？请简要分析。（4 分）</li><li>文章以“玩笑”为线索，体现了什么？（3 分）</li><li>如果是你，你会做出这么“幼稚”的举动吗？为什么。（1+4 分）</li></ol><hr><p><strong>1. 本篇文章中，“我”随着情节发展而产生了五次变化，请根据示例进行概括。（3 分）</strong></p><ul><li><strong>（1）害羞</strong>（示例：纸飞机落在她铅笔盒旁，被起哄，脸烧得厉害，挠头笑）</li><li><strong>（2）紧张/忐忑/期待</strong>（示例：她真的去了，心快跳出喉咙）</li><li><strong>（3）失落/震惊/难以置信</strong>（示例：她没看到字，说盒子是空的，我愣在原地，想着“怎么会看不见”）</li><li><strong>（4）愣住</strong>（示例：我愣在原地）</li><li><strong>（5）巨大失落/顿悟/感伤</strong>（示例：发现字迹消失，捏紧书页，第一次尝到巨大无声的失落，多年后的感悟）</li></ul><p><strong>2. 结合语境，品味下列句子。（4 分）</strong></p><ul><li><strong>（1）“铅笔的痕迹如此之轻，像少年易逝的勇气，像命运随手一抹的指纹。”</strong><ul><li><strong>本体与喻体分析：</strong> 这句话的核心是形容“铅笔痕迹”的“轻”。作者用了两个精妙的比喻：<ul><li><strong>像少年易逝的勇气：</strong> 少年的勇气往往是纯粹、炽热但又带着羞涩和不稳定的，容易在现实（如嘲笑、挫折）面前退缩或消散，就像那浅浅的铅笔痕一样，不够牢固，容易“逝去”。</li><li><strong>像命运随手一抹的指纹：</strong> 命运在这里被拟人化，仿佛一个漫不经心的主宰者。“随手一抹”强调了命运的无常、偶然和巨大的力量。“指纹”则形象地描绘了痕迹被抹去的方式——不经意、不费力，就像擦掉一个指纹印那样简单随意。</li></ul></li><li><strong>情感与主旨：</strong><ul><li><strong>强调“轻”的双重性：</strong> 既指物理上铅笔字迹容易被擦除的特性，更深刻地指少年那份郑重其事的感情（勇气、心意）在现实和命运面前的脆弱、渺小、不堪一击。</li><li><strong>深化失落感：</strong> 这种“轻”与少年心中那份感情的“重”（“全部心跳的分量”）形成强烈反差，突显了失落、遗憾和无力感。</li><li><strong>揭示人生感悟：</strong> 这句话升华了事件，点明了文章的核心感悟——生命中许多真挚的情感和努力，可能如同这铅笔痕一样，轻易地、偶然地就被“命运”或时间抹去，不留痕迹。它象征了青春纯真情感的无常和易逝。</li></ul></li></ul></li></ul><p><strong>3. 从全文看，以“最初的玩笑”为题，有什么好处？请简要分析。（4 分）</strong></p><ol><li><strong>贯穿线索，点明核心事件：</strong> “玩笑”是贯穿全文的核心事件（策划寻宝游戏、折纸飞机、被当作空盒玩笑、多年后感悟）。题目直接点明了故事围绕的核心。</li><li><strong>制造悬念与反差：</strong> “玩笑”通常指轻松、无伤大雅的行为。但结合“最初”和文章内容，读者会好奇：这真的是个玩笑吗？为什么是“最初的”？这为阅读制造了悬念。更重要的是，这个标题与故事内核（少年无比郑重的真心）形成巨大反差，强化了情感冲击力。</li><li><strong>揭示主旨，深化内涵：</strong> 故事最终揭示，这场精心策划的“游戏”被他人当作“玩笑”，而命运更是开了一个更大的“玩笑”（字迹消失）。标题一语双关：<ul><li>表层：指“我”策划的寻宝游戏被大家视为一个幼稚的玩笑。</li><li>深层：指命运对少年真挚情感的捉弄（字迹消失，心意被彻底误解和错过），以及人生中许多真心被一笑而过的普遍现象。这“最初的玩笑”成了少年理解人生无常和遗憾的起点。</li></ul></li><li><strong>奠定情感基调：</strong> 标题隐含着一丝自嘲、无奈和淡淡的感伤，为全文奠定了一种追忆青春遗憾、感慨命运无常的情感基调。</li></ol><p><strong>4. 文章以“玩笑”为线索，体现了什么？（3 分）</strong></p><ol><li><strong>少年真挚情感与现实理解的巨大落差：</strong> “我”倾注心血（画图、埋书、写心迹）策划的“游戏”，在同学和她眼中仅仅是一个“幼稚”的“玩笑”。这线索强烈对比出少年内心世界的郑重与外部世界的轻率解读。</li><li><strong>命运的无常与人生的遗憾：</strong> 字迹的意外消失，使得“我”的真心彻底沦为一场“空欢喜”，连解释的机会都没有。这个关键转折（也是“玩笑”的高潮）凸显了命运捉弄人的偶然性和残酷性，造成了无法弥补的青春遗憾。</li><li><strong>成长中的顿悟与普遍人生体验：</strong> 多年后回望，“玩笑”已超越具体事件，成为理解人生的一个隐喻。它象征着生命中那些未被看见、被误解、被意外摧毁的真诚心意和努力，揭示了“许多真心被一笑而过没收”的普遍人生况味。这条线索最终升华为对人生遗憾本质的深刻体悟。</li></ol><p><strong>5. 如果是你，你会做出这么“幼稚”的举动吗？为什么。（1+4 分）</strong></p><ol><li><strong>我会或我不会（选择一个作答）</strong>（1分）</li><li><strong>为什么？</strong>（4分）<ul><li><strong>选择“我会”：</strong><ul><li><strong>珍视青春的纯粹与勇敢：</strong> 青春时期的感情往往是懵懂、炽热、不计后果的。这种“幼稚”恰恰是青春最珍贵的特质——敢于表达，不怕出丑，带着笨拙的真诚。即使结果可能不如意（像文中的“我”一样），这份勇敢尝试本身也是一种美好而独特的体验，是成长的一部分。</li><li><strong>避免遗憾：</strong> 与其多年后遗憾于“未曾开口”或“未曾尝试”，不如在当时鼓起勇气，哪怕方式看起来“幼稚”。努力过，即使失败或被误解，内心也少一分“如果当初”的悔意。文中的“我”虽然失落，但至少他勇敢地行动了。</li><li><strong>真诚的表达自有价值：</strong> 心意本身的价值不在于形式是否成熟完美，而在于其真诚。这种看似幼稚的举动，是少年时代表达真心最直接、最本真的方式之一。它承载的情感分量是真实的、值得尊重的。</li></ul></li><li><strong>选择“我不会”：</strong><ul><li><strong>考虑现实风险与结果：</strong> 预见到可能被嘲笑（如文中起哄）、心意被误解（如她只当是玩笑）甚至像文中那样因意外（字迹消失）而彻底失败的风险。这种公开的、带有表演性质的方式风险太高，容易造成尴尬和更大的失落。</li><li><strong>选择更稳妥/私密的方式：</strong> 为了保护自己和对方，也为了确保心意能被更郑重地对待，可能会选择更直接（如当面或写信表白）或更私密（如单独把书送给她）的方式来表达。这样能减少干扰，增加对方理解真心的可能性。</li><li><strong>性格使然或吸取“教训”：</strong> 可能本身性格更内向谨慎，或者从类似故事（如本文）中吸取了“教训”，认为这种方式成功率低、易生误会，不如采取更成熟有效的沟通策略。</li><li><strong>对“幼稚”的认知：</strong> 认识到这种方式确实可能显得不够成熟或考虑不周（如字迹易擦除），希望用更能体现诚意和尊重的方式来表达情感。</li></ul></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;毕业季的阳光斜切过教室，像一把灼烫的刀。&lt;/p&gt;
&lt;p&gt;我偷偷在课桌下画藏宝图。&lt;/p&gt;
&lt;p&gt;图上的终点，是操场尽头那棵老槐树。&lt;/p&gt;
&lt;p&gt;那里埋着我的宝盒。&lt;/p&gt;
&lt;p&gt;盒子里，是我那本翻旧了的《小王子》。&lt;/p&gt;
&lt;p&gt;书页的空白处，藏着用铅笔写的小字：你是我唯</summary>
      
    
    
    
    <category term="学习 · 文化课" scheme="https://xzy404.me/categories/%E5%AD%A6%E4%B9%A0-%C2%B7-%E6%96%87%E5%8C%96%E8%AF%BE/"/>
    
    <category term="休闲 · 娱乐" scheme="https://xzy404.me/categories/%E4%BC%91%E9%97%B2-%C2%B7-%E5%A8%B1%E4%B9%90/"/>
    
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
    <category term="娱乐" scheme="https://xzy404.me/tags/%E5%A8%B1%E4%B9%90/"/>
    
    <category term="题目" scheme="https://xzy404.me/tags/%E9%A2%98%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>毕业了，也留下了点遗憾</title>
    <link href="https://xzy404.me/article/%E6%AF%95%E4%B8%9A%E4%BA%86%EF%BC%8C%E4%B9%9F%E7%95%99%E4%B8%8B%E4%BA%86%E7%82%B9%E9%81%97%E6%86%BE/"/>
    <id>https://xzy404.me/article/%E6%AF%95%E4%B8%9A%E4%BA%86%EF%BC%8C%E4%B9%9F%E7%95%99%E4%B8%8B%E4%BA%86%E7%82%B9%E9%81%97%E6%86%BE/</id>
    <published>2025-07-12T09:30:33.493Z</published>
    <updated>2025-07-12T09:44:45.309Z</updated>
    
    <content type="html"><![CDATA[<p>教室后墙的倒计时牌，终于撕到了最后一页。</p><p>我踮起脚，把它摘下来。</p><p>纸页边角卷曲，像被风吹过的夏天。</p><p>大家都在笑，在签名，在合影。</p><p>只有我，偷偷瞥向那个空荡荡的座位。</p><p>那是她的位置。</p><p>她毕业后去外省上学的时候，连告别都没有。</p><p>只留下一张写了一半的同学录，塞在我的课桌里。</p><p>我每天看一下，像拆一颗永远拆不完的糖。</p><p>留言板那页，她画了一只歪歪扭扭的纸飞机。</p><p>下面写：“等它飞回来，我们就再见。”</p><p>我信了。</p><p>真的折了无数架纸飞机，从走廊扔出去。</p><p>有的卡在树杈上，有的栽进水坑里。</p><p>最远的一架，落在了操场边的沙坑。</p><p>被值日生扫走了。</p><p>毕业典礼那天，我最后扔了一次。</p><p>风很大，飞机盘旋着，撞上教学楼的玻璃。</p><p>啪嗒，坠下来。</p><p>就像我始终没学会的，潇洒的告别姿势。</p><p>后来，我路过她的城市。</p><p>在熙攘的火车站，看见一个扎马尾的熟悉背影。</p><p>我捏着口袋里一直放着的纸飞机，终究没喊出声。</p><p>或许有些约定，本来就是孩子气的谎言。</p><p>像那些坠落的纸飞机。</p><p>永远等不到，乘风回来的那天。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;教室后墙的倒计时牌，终于撕到了最后一页。&lt;/p&gt;
&lt;p&gt;我踮起脚，把它摘下来。&lt;/p&gt;
&lt;p&gt;纸页边角卷曲，像被风吹过的夏天。&lt;/p&gt;
&lt;p&gt;大家都在笑，在签名，在合影。&lt;/p&gt;
&lt;p&gt;只有我，偷偷瞥向那个空荡荡的座位。&lt;/p&gt;
&lt;p&gt;那是她的位置。&lt;/p&gt;
&lt;p&gt;她毕业后</summary>
      
    
    
    
    <category term="休闲 · 娱乐" scheme="https://xzy404.me/categories/%E4%BC%91%E9%97%B2-%C2%B7-%E5%A8%B1%E4%B9%90/"/>
    
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
    <category term="娱乐" scheme="https://xzy404.me/tags/%E5%A8%B1%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>怎么写出一个属于自己的排序算法——桶排序（全） &amp; 计数排序（上）</title>
    <link href="https://xzy404.me/article/%E6%80%8E%E4%B9%88%E5%86%99%E5%87%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E6%A1%B6%E6%8E%92%E5%BA%8F%EF%BC%88%E5%85%A8%EF%BC%89%20&amp;amp;%20%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>https://xzy404.me/article/%E6%80%8E%E4%B9%88%E5%86%99%E5%87%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E6%A1%B6%E6%8E%92%E5%BA%8F%EF%BC%88%E5%85%A8%EF%BC%89%20&amp;amp;%20%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F%EF%BC%88%E4%B8%8A%EF%BC%89/</id>
    <published>2025-06-10T04:52:27.342Z</published>
    <updated>2025-06-10T04:52:28.178Z</updated>
    
    <content type="html"><![CDATA[<p>同步发表于<a href="https://www.luogu.com.cn/article/o0lwl71k">洛谷专栏</a>。</p><p>怎么写出一个属于自己的排序算法呢？今天要带你写的是桶排序，顺便写一个在桶排序之上进行优化的排序算法——计数排序。</p><p>你在一个偶然的瞬间，发现一个可以不基于比较的排序算法。</p><p>我们从头开始遍历待排序数组，统计每个数字的出现次数，统计完毕后遍历计数数组，发现第 $i$ 个数字出现了 $j$ 次，那么就循环输出它 $j$ 次：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[maxn], b[maxn]; <span class="comment">// 待排序数组和桶数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++)</span><br><span class="line">    b[a[i]]++;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++) <span class="comment">// 遍历每一个数（注意不是数字）</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= b[i]; j++) <span class="comment">// 输出出现了 j 次的 i</span></span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恭喜你已经有了桶排序的代码，但是大量学者发现一个问题，只能处理 $0 \le maxn \le 10^7$ 左右的数据，不然会运行时错误（负数）以及内存超限（大数）。</p><p>于是你开始优化它，事实上你发现桶数组只需要存储待排序数组中的最小值到最大值的个数，并不需要开到 $maxn$，所以你对其进行了优化：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[maxn], minx, maxx; <span class="comment">// 待排序数组、待排序数组中的最小值和最大值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++)</span><br><span class="line">&#123;</span><br><span class="line">    minx = <span class="built_in">min</span>(minx, a[i]);</span><br><span class="line">    maxx = <span class="built_in">max</span>(maxx, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> b[maxx - minxx + <span class="number">1</span>]; <span class="comment">// 桶数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++)</span><br><span class="line">    b[a[i] - minx + <span class="number">1</span>]++;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++) <span class="comment">// 遍历每一个数（注意不是数字）</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= b[i]; j++) <span class="comment">// 输出出现了 j 次的 i</span></span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>聪明的你决定把这个称作一个新的排序算法——计数排序。</p><p>但其实如果每个数（从 $0$ 到 $10^7$）都出现过一次，这个优化还是没有效果的。</p><blockquote><p>事实上你可以尝试使用 STL 的 map 容器存储。</p></blockquote><p>所以你打算尝试将前缀和算法加进来优化，敬请期待<a href="https://www.luogu.com.cn/article/72tl0c5d">《怎么写出一个属于自己的排序算法——计数排序（下）》</a>）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;同步发表于&lt;a href=&quot;https://www.luogu.com.cn/article/o0lwl71k&quot;&gt;洛谷专栏&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;怎么写出一个属于自己的排序算法呢？今天要带你写的是桶排序，顺便写一个在桶排序之上进行优化的排序算法——计数排序。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="算法 · 理论" scheme="https://xzy404.me/categories/%E7%AE%97%E6%B3%95-%C2%B7-%E7%90%86%E8%AE%BA/"/>
    
    
    <category term="怎么写出一个属于自己的排序算法" scheme="https://xzy404.me/tags/%E6%80%8E%E4%B9%88%E5%86%99%E5%87%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>公告与随笔</title>
    <link href="https://xzy404.me/article/%E5%85%AC%E5%91%8A%E4%B8%8E%E9%9A%8F%E7%AC%94/"/>
    <id>https://xzy404.me/article/%E5%85%AC%E5%91%8A%E4%B8%8E%E9%9A%8F%E7%AC%94/</id>
    <published>2025-04-16T11:22:47.809Z</published>
    <updated>2025-04-16T11:22:48.218Z</updated>
    
    <content type="html"><![CDATA[<h1>公告</h1><ul><li>2025-xx-xx：启用博客！</li></ul><h1>随笔</h1><ul><li>无。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;公告&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2025-xx-xx：启用博客！&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;随笔&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;无。&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    <category term="闲话" scheme="https://xzy404.me/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
    <category term="About" scheme="https://xzy404.me/tags/About/"/>
    
  </entry>
  
  <entry>
    <title>game</title>
    <link href="https://xzy404.me/article/game/"/>
    <id>https://xzy404.me/article/game/</id>
    <published>2025-04-15T13:10:21.331Z</published>
    <updated>2025-04-16T12:24:54.959Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(false);</span></span><br><span class="line">    <span class="comment">// cin.tie(nullptr);</span></span><br><span class="line">    <span class="comment">// cout.tie(nullptr);</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello World!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="环境" scheme="https://xzy404.me/categories/%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="环境" scheme="https://xzy404.me/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>【转载于 qwqerty】一种基于积性性质快速计算 lowbit 的方法</title>
    <link href="https://xzy404.me/article/%E3%80%90%E8%BD%AC%E8%BD%BD%E4%BA%8E%20qwqerty%E3%80%91%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E%E7%A7%AF%E6%80%A7%E6%80%A7%E8%B4%A8%E5%BF%AB%E9%80%9F%E8%AE%A1%E7%AE%97%20lowbit%20%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://xzy404.me/article/%E3%80%90%E8%BD%AC%E8%BD%BD%E4%BA%8E%20qwqerty%E3%80%91%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E%E7%A7%AF%E6%80%A7%E6%80%A7%E8%B4%A8%E5%BF%AB%E9%80%9F%E8%AE%A1%E7%AE%97%20lowbit%20%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2025-04-15T12:45:34.500Z</published>
    <updated>2025-04-15T12:45:35.731Z</updated>
    
    <content type="html"><![CDATA[<h1>本文转载于<a href="https://www.luogu.com.cn/article/mgu1aigs">https://www.luogu.com.cn/article/mgu1aigs</a>。</h1><p>可惜休闲娱乐分区不能全站推荐（<br>我们不难打出一下暴力代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!(x &amp; <span class="number">1</span>)) &#123;</span><br><span class="line">res++;</span><br><span class="line">x &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (<span class="number">1</span> &lt;&lt; res);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>容易证明，$\operatorname{lowbit}(x)$ 是积性函数。看到积性函数，我们首先联想到分解质因数，所以我们可以将 $x$ 分解质因数，计算其质因数之积。<br>接下来我们考虑质数幂的情况，很显然，除了 $\operatorname{lowbit}(2^k)=2^k$ 之外，其它都是 $0$。所以我们只需要分解质因数，套公式计算即可。代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (y) &#123;</span><br><span class="line"><span class="keyword">if</span> (y &amp; <span class="number">1</span>) res *= x;</span><br><span class="line">x *= x;</span><br><span class="line">y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / i; i++) &#123;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">x /= i;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">2</span>) res *= <span class="built_in">qpow</span>(<span class="number">2</span>, cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x != <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">2</span>) &#123;</span><br><span class="line">res *= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>考虑优化，只需统计 $=2$ 的质因数即可，代码可以优化成这样：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (y) &#123;</span><br><span class="line"><span class="keyword">if</span> (y &amp; <span class="number">1</span>) res *= x;</span><br><span class="line">x *= x;</span><br><span class="line">y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (x % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">x /= <span class="number">2</span>;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">qpow</span>(<span class="number">2</span>, cnt);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>最后再使用位运算优化一下常数，代码就会变成这样：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!(x &amp; <span class="number">1</span>)) &#123;</span><br><span class="line">res++;</span><br><span class="line">x &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (<span class="number">1</span> &lt;&lt; res);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这样，我们就将一个 $O(\log n)$ 的代码优化成了 $O(\log n)$，优化效果非常明显。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;本文转载于&lt;a href=&quot;https://www.luogu.com.cn/article/mgu1aigs&quot;&gt;https://www.luogu.com.cn/article/mgu1aigs&lt;/a&gt;。&lt;/h1&gt;
&lt;p&gt;可惜休闲娱乐分区不能全站推荐（&lt;br&gt;
我们不难</summary>
      
    
    
    
    <category term="闲话" scheme="https://xzy404.me/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
    <category term="转载" scheme="https://xzy404.me/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>题解：P12172 [蓝桥杯 2025 省 Python B] LQ 图形</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12172%20[%E8%93%9D%E6%A1%A5%E6%9D%AF%202025%20%E7%9C%81%20Python%20B]%20LQ%20%E5%9B%BE%E5%BD%A2/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12172%20[%E8%93%9D%E6%A1%A5%E6%9D%AF%202025%20%E7%9C%81%20Python%20B]%20LQ%20%E5%9B%BE%E5%BD%A2/</id>
    <published>2025-04-15T12:26:12.612Z</published>
    <updated>2025-04-15T12:26:13.644Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：P12172 [蓝桥杯 2025 省 Python B] LQ 图形</h1><h2 id="思路">思路</h2><p>本题考察模拟。</p><p>不规则图形不方便输出？没关系，分成两部分（两个矩形）即可，大小分别为 $h \times w$ 和 $w \times (v + w)$。</p><h2 id="代码">代码</h2><p>第一个矩形的输出代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= h; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= w; j++)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Q&quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二个矩形是差不多的，只需要调整 $i$ 和 $j$ 的范围即可。</p><p>完整代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> w, h, v;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(false);</span></span><br><span class="line">    <span class="comment">// cin.tie(nullptr);</span></span><br><span class="line">    <span class="comment">// cout.tie(nullptr);</span></span><br><span class="line">    cin &gt;&gt; w &gt;&gt; h &gt;&gt; v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= h; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= w; j++)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Q&quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= w; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= v + w; j++)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Q&quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：P12172 [蓝桥杯 2025 省 Python B] LQ 图形&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;本题考察模拟。&lt;/p&gt;
&lt;p&gt;不规则图形不方便输出？没关系，分成两部分（两个矩形）即可，大小分别为 $h &#92;times w$ 和 $w &#92;t</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>对于某些事的另一种解释</title>
    <link href="https://xzy404.me/article/%E5%AF%B9%E4%BA%8E%E6%9F%90%E4%BA%9B%E4%BA%8B%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E8%A7%A3%E9%87%8A/"/>
    <id>https://xzy404.me/article/%E5%AF%B9%E4%BA%8E%E6%9F%90%E4%BA%9B%E4%BA%8B%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E8%A7%A3%E9%87%8A/</id>
    <published>2025-04-15T12:25:34.834Z</published>
    <updated>2025-04-15T12:25:35.492Z</updated>
    
    <content type="html"><![CDATA[<p>叠甲：本文仅作娱乐，不做任何依据。</p><ul><li>边运动边写作业会无事发生：<ul><li>从作用分析：<ul><li>运动使人快乐、写作业使人伤心，互相抵消</li></ul></li><li>从后果分析：<ul><li>猝死使人伤心、不用写作业使人快乐，互相抵消</li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;叠甲：本文仅作娱乐，不做任何依据。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;边运动边写作业会无事发生：
&lt;ul&gt;
&lt;li&gt;从作用分析：
&lt;ul&gt;
&lt;li&gt;运动使人快乐、写作业使人伤心，互相抵消&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从后果分析：
&lt;ul&gt;
&lt;li&gt;猝死使人伤心、不用写</summary>
      
    
    
    
    <category term="闲话" scheme="https://xzy404.me/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>题解：P12154 [蓝桥杯 2024 省 Java B] 逃离高塔</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12154%20[%E8%93%9D%E6%A1%A5%E6%9D%AF%202024%20%E7%9C%81%20Java%20B]%20%E9%80%83%E7%A6%BB%E9%AB%98%E5%A1%94/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP12154%20[%E8%93%9D%E6%A1%A5%E6%9D%AF%202024%20%E7%9C%81%20Java%20B]%20%E9%80%83%E7%A6%BB%E9%AB%98%E5%A1%94/</id>
    <published>2025-04-15T12:24:51.764Z</published>
    <updated>2025-04-15T12:24:53.058Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：P12154 [蓝桥杯 2024 省 Java B] 逃离高塔</h1><h2 id="思路">思路</h2><p>一个数的立方数个位仅由<strong>该数的个位数</strong>决定。因此，我们只需确定哪些个位数的立方结果以 $3$ 结尾并统计以这些个位数结尾的数的出现次数。</p><p>因为在 $0$ 至 $9$ 这个范围内，只有 $7$ 的立方数个位是 $3$（$7^3=343$）。</p><p>然后从 $1$ 到 $2025$ 中每 $10$ 个就会有一个数的个位为 $7$，最小为 $7$，最大为 $2017$。</p><p>所以，我们用这些数构成等差数列，首项为 $7$，末项为 $2017$，公差为 $10$。总项数公式为：</p><p>$$<br>\text{项数} = \frac{\text{末项} - \text{首项}}{\text{公差}} + 1 = \frac{2017 - 7}{10} + 1 = 202<br>$$</p><p>因此答案为 $202$。</p><h2 id="代码">代码</h2><p>C++ 代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(false);</span></span><br><span class="line">    <span class="comment">// cin.tie(nullptr);</span></span><br><span class="line">    <span class="comment">// cout.tie(nullptr);</span></span><br><span class="line">    cout &lt;&lt; <span class="number">202</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java 代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">202</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：P12154 [蓝桥杯 2024 省 Java B] 逃离高塔&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;一个数的立方数个位仅由&lt;strong&gt;该数的个位数&lt;/strong&gt;决定。因此，我们只需确定哪些个位数的立方结果以 $3$ 结尾并统计以这些个位数</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解：CF411C Kicker</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9ACF411C%20Kicker/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9ACF411C%20Kicker/</id>
    <published>2025-04-15T12:24:08.588Z</published>
    <updated>2025-04-15T12:24:09.829Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：CF411C Kicker</h1><h2 id="思路">思路</h2><p>队伍一先安排，那么队伍二想要获胜一定安排能踢过队伍一的球员。</p><p>先看队伍一，怎么保证队伍一必胜呢？只要队伍一的攻击球员<s>至高无上</s>特别厉害，攻击力要比队伍二任意球员的防守力都要大，那么无论队伍二怎么安排防守都踢不过。同样的，只要队伍一的防守球员<s>至高无上</s>特别厉害，防守力要比队伍二任意球员的攻击力都要大，那么无论队伍二怎么安排攻击都踢不过。队伍二亦然。</p><p>结论：只要一个人的攻击力大于对方二人的防守力且另一个人的防守力大于对方二人的攻击力则该队伍获胜，反之亦然。如果两队都没有杰出的球员能同时踢败对方的两位球员，那么就没有保证胜利的安排方案。</p><p>当然，队伍二不能套用队伍一的代码，因为队伍二是根据队伍一进行选择的，而以队伍二为基准进行判断时我们并不知道队伍一的安排，所以要把队伍一每一种安排都列举出来。</p><h2 id="代码">代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">2</span>], b[<span class="number">2</span>], c[<span class="number">2</span>], d[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; afs &gt;&gt; agj &gt;&gt; bfs &gt;&gt; bgj &gt;&gt; cfs &gt;&gt; cgj &gt;&gt; dfs &gt;&gt; dgj;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        (afs &gt; <span class="built_in">max</span>(cgj, dgj) &amp;&amp; bgj &gt; <span class="built_in">max</span>(cfs, dgj)) ||</span><br><span class="line">        (bfs &gt; <span class="built_in">max</span>(cgj, dgj) &amp;&amp; agj &gt; <span class="built_in">max</span>(cfs, dgj)))</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Team 1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">        (cgj &gt; afs &amp;&amp; dfs &gt; bgj || dgj &gt; afs &amp;&amp; cfs &gt; bgj) &amp;&amp;</span><br><span class="line">        (cgj &gt; bfs &amp;&amp; dfs &gt; agj || dgj &gt; bfs &amp;&amp; cfs &gt; agj))</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Team 2&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Draw&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：CF411C Kicker&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;队伍一先安排，那么队伍二想要获胜一定安排能踢过队伍一的球员。&lt;/p&gt;
&lt;p&gt;先看队伍一，怎么保证队伍一必胜呢？只要队伍一的攻击球员&lt;s&gt;至高无上&lt;/s&gt;特别厉害，攻击力要比队伍二任意</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>退谷记</title>
    <link href="https://xzy404.me/article/%E9%80%80%E8%B0%B7%E8%AE%B0/"/>
    <id>https://xzy404.me/article/%E9%80%80%E8%B0%B7%E8%AE%B0/</id>
    <published>2025-04-15T12:23:26.054Z</published>
    <updated>2025-04-15T12:23:27.064Z</updated>
    
    <content type="html"><![CDATA[<p>看到大家都在写退役记，可我不想退役，所以就有了退谷记。</p><h1>上线记录</h1><ul><li>2025/4/9：发布退谷犇犇 | 发布退谷记。</li><li>2025/4/10：拜谢佛祖。</li><li>2025/4/11：打入门赛。</li><li>2025/4/12：搞博客。</li></ul><h1>随笔</h1><p>2025/4/9-1</p><ul><li>水题不开 IDE，</li><li>红题不开编译器。</li><li>橙题靠运气，</li><li>黄靠测评机。</li><li>绿题全靠打破表，</li><li>蓝题全靠飞样例。</li><li>紫下测试点，</li><li>黑靠抄题解。</li></ul><p>2025/4/9-2</p><ul><li>也就只有那破红点陪着我了。</li></ul><p>2025/4/9-3</p><ul><li>再不理我就再也理不了我了。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;看到大家都在写退役记，可我不想退役，所以就有了退谷记。&lt;/p&gt;
&lt;h1&gt;上线记录&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2025/4/9：发布退谷犇犇 | 发布退谷记。&lt;/li&gt;
&lt;li&gt;2025/4/10：拜谢佛祖。&lt;/li&gt;
&lt;li&gt;2025/4/11：打入门赛。&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="记录" scheme="https://xzy404.me/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>题解：P11950 [科大国创杯初中组 2023] 评分</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP11950%20[%E7%A7%91%E5%A4%A7%E5%9B%BD%E5%88%9B%E6%9D%AF%E5%88%9D%E4%B8%AD%E7%BB%84%202023]%20%E8%AF%84%E5%88%86/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP11950%20[%E7%A7%91%E5%A4%A7%E5%9B%BD%E5%88%9B%E6%9D%AF%E5%88%9D%E4%B8%AD%E7%BB%84%202023]%20%E8%AF%84%E5%88%86/</id>
    <published>2025-04-15T12:13:41.359Z</published>
    <updated>2025-04-15T12:13:41.890Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：P11950 [科大国创杯初中组 2023] 评分</h1><h2 id="思路">思路</h2><p>模拟题。</p><p>每次读入时先累计分数并统计最大和最小分值，读入完后减去后最大和最小分值后再取平均数。</p><p>最后排完序并输出即可。</p><h2 id="代码">代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, m, ma = <span class="number">-1</span>, mi = <span class="number">105</span>, sum, t;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">STRUCT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> s;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">&#125; a[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(STRUCT x, STRUCT y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.s != y.s)</span><br><span class="line">        <span class="keyword">return</span> x.s &gt; y.s;</span><br><span class="line">    <span class="keyword">return</span> x.id &lt; y.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ma = <span class="number">-1</span>, mi = <span class="number">105</span>, sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; t;</span><br><span class="line">            sum += t;</span><br><span class="line">            ma = <span class="built_in">max</span>(ma, t);</span><br><span class="line">            mi = <span class="built_in">min</span>(mi, t);</span><br><span class="line">        &#125;</span><br><span class="line">        sum = sum - ma - mi;</span><br><span class="line">        a[i].s = <span class="number">1.0</span> * sum / (m - <span class="number">2</span>);</span><br><span class="line">        a[i].id = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>, cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; a[i].id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：P11950 [科大国创杯初中组 2023] 评分&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;模拟题。&lt;/p&gt;
&lt;p&gt;每次读入时先累计分数并统计最大和最小分值，读入完后减去后最大和最小分值后再取平均数。&lt;/p&gt;
&lt;p&gt;最后排完序并输出即可。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>狂包日记</title>
    <link href="https://xzy404.me/article/%E7%8B%82%E5%8C%85%E6%97%A5%E8%AE%B0/"/>
    <id>https://xzy404.me/article/%E7%8B%82%E5%8C%85%E6%97%A5%E8%AE%B0/</id>
    <published>2025-04-15T12:12:50.108Z</published>
    <updated>2025-04-15T12:22:24.613Z</updated>
    
    <content type="html"><![CDATA[<p>有个面包，走在路上，走着走着，肚子饿了，于是吃了，他的自己。</p><p>好吧，应该是：</p><p>有个面包，走着走着肚子饿了，于是他把他自己吃掉了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;有个面包，走在路上，走着走着，肚子饿了，于是吃了，他的自己。&lt;/p&gt;
&lt;p&gt;好吧，应该是：&lt;/p&gt;
&lt;p&gt;有个面包，走着走着肚子饿了，于是他把他自己吃掉了。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="闲话" scheme="https://xzy404.me/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
    <category term="闲话" scheme="https://xzy404.me/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>题解：P1036 [NOIP 2002 普及组] 选数</title>
    <link href="https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP1036%20[NOIP%202002%20%E6%99%AE%E5%8F%8A%E7%BB%84]%20%E9%80%89%E6%95%B0/"/>
    <id>https://xzy404.me/article/%E9%A2%98%E8%A7%A3%EF%BC%9AP1036%20[NOIP%202002%20%E6%99%AE%E5%8F%8A%E7%BB%84]%20%E9%80%89%E6%95%B0/</id>
    <published>2025-04-15T12:11:06.542Z</published>
    <updated>2025-04-15T12:11:07.341Z</updated>
    
    <content type="html"><![CDATA[<h1>题解：P1036 [NOIP 2002 普及组] 选数</h1><h2 id="思路">思路</h2><p>由于数据小，考虑暴力搜索每种可能并判断总和是否为素数。</p><p>详细一点（定义 $m$ 为选的数个数，$s$ 为当前的和，$x$ 为下一个选的数的位置，$dfs(m, s, x)$ 为搜索函数，$ans$ 为种类数即题目所求）：</p><ol><li>确定当前选择的数；</li><li>从 $x$ 遍历 $i$ 至整个数组 $a$，每次搜索 $dfs(m + 1, s + a_i, i + 1)$；</li><li>当 $m = k$ 了，判断 $s$ 是否为素数：<ul><li>是：$ans + 1$；</li><li>不是：结束搜索，因为后面没有继续搜索的必要。</li></ul></li></ol><h2 id="代码">代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n, k, ans, a[<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x)</span> <span class="comment">// 判断 x 是否为质数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">2</span>; i * i &lt;= x; i++) <span class="comment">// 避免使用 sqrt() 函数，减少精度误差</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>) <span class="comment">// 等同于 x % i == 0</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">long</span> <span class="type">long</span> m, <span class="type">long</span> <span class="type">long</span> s, <span class="type">long</span> <span class="type">long</span> x)</span> <span class="comment">// m：选的数个数，s：当前的和，x：下一个选的数的位置</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m == k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(s)) <span class="comment">// 如果当前的和是质数，则 ans++</span></span><br><span class="line">            ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = x; i &lt; n; i++) <span class="comment">// 从 x 开始</span></span><br><span class="line">        <span class="built_in">dfs</span>(m + <span class="number">1</span>, s + a[i], i + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">// 初始状态：选的数个数为 0，当前的和为 0，下一个选的数的位置为 0</span></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;题解：P1036 [NOIP 2002 普及组] 选数&lt;/h1&gt;
&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;p&gt;由于数据小，考虑暴力搜索每种可能并判断总和是否为素数。&lt;/p&gt;
&lt;p&gt;详细一点（定义 $m$ 为选的数个数，$s$ 为当前的和，$x$ 为下一个选的数的位置，$</summary>
      
    
    
    
    <category term="题解" scheme="https://xzy404.me/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://xzy404.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Markdown/TeX</title>
    <link href="https://xzy404.me/article/TeX/"/>
    <id>https://xzy404.me/article/TeX/</id>
    <published>2025-04-13T13:02:15.095Z</published>
    <updated>2025-04-16T12:19:30.134Z</updated>
    
    <content type="html"><![CDATA[<h1>1 级标题：Built by 黑少, used by xzy, copyright belongs to xzy and 黑少. 本站由黑少建造，由 xzy 使用，版权归 xzy 和黑少所有。本站会不定时咕咕咕地更新！</h1><h2 id="2-级标题">2 级标题</h2><h3 id="3-级标题">3 级标题</h3><h4 id="4-级标题">4 级标题</h4><h5 id="5-级标题">5 级标题</h5><h6 id="6-级标题">6 级标题</h6><p>这是一篇文章……吗？</p><p>看来我需要<strong>加粗</strong>一下这个<em>斜体</em>的<s>删除线</s>。</p><p>当然不能落了<a href="https://xzy404.me">博客主页</a>。</p><ul><li>114514</li><li>1919810</li></ul><ol><li>首先</li><li>然后</li></ol><blockquote><p>freopen 怎么打？</p></blockquote><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line">#define endl &#x27;\n&#x27;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    // ios::sync_with_stdio(false);</span><br><span class="line">    // cin.tie(nullptr);</span><br><span class="line">    // cout.tie(nullptr);</span><br><span class="line">    cout &lt;&lt; &quot;Hello World!&quot; &lt;&lt; endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>114514</code> 是个数。</p><table><thead><tr><th>col1</th><th>col2</th><th>col3</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>3</td></tr><tr><td>4</td><td>5</td><td>6</td></tr></tbody></table><p>$$<br>114514 + 1919810 = \texttt{114514} \text{ 就怪了！}<br>$$</p><p>$114514+1919810=\text{?}$</p><p>博客好评！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;1 级标题：Built by 黑少, used by xzy, copyright belongs to xzy and 黑少. 本站由黑少建造，由 xzy 使用，版权归 xzy 和黑少所有。本站会不定时咕咕咕地更新！&lt;/h1&gt;
&lt;h2 id=&quot;2-级标题&quot;&gt;2 级标题&lt;</summary>
      
    
    
    
    <category term="其他" scheme="https://xzy404.me/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="About" scheme="https://xzy404.me/tags/About/"/>
    
  </entry>
  
</feed>
